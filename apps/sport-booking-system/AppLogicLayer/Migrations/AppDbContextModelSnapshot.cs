// <auto-generated />
using System;
using AppLogicLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppLogicLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppLogicLayer.ApprovalProcess", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApprovalProcess");
                });

            modelBuilder.Entity("AppLogicLayer.AuditTrail", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ActionType")
                        .HasColumnType("text");

                    b.Property<Guid?>("AuditObjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.ToTable("AuditTrail");
                });

            modelBuilder.Entity("AppLogicLayer.AuditTrailField", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuditTrailId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NewReadableValue")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NewValue")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("OldReadableValue")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("OldValue")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("AuditTrailId");

                    b.ToTable("AuditTrailField");
                });

            modelBuilder.Entity("AppLogicLayer.Func", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AlwaysAllowAccess")
                        .HasColumnType("boolean");

                    b.Property<bool>("AlwaysHidden")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FuncCode")
                        .HasColumnType("text");

                    b.Property<string>("FuncName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MainCategoryName")
                        .HasColumnType("text");

                    b.Property<string>("MainUrl")
                        .HasColumnType("text");

                    b.Property<bool>("RequiredAccess2FA")
                        .HasColumnType("boolean");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("text");

                    b.Property<string>("SubUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("Func");
                });

            modelBuilder.Entity("AppLogicLayer.Position", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("RoleID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("AppLogicLayer.Role", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("RoleCode")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AppLogicLayer.RoleFunc", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowCreate")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowView")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("FuncId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("FuncId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleFunc");
                });

            modelBuilder.Entity("AppLogicLayer.User", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AppLogicLayer.Workflow", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowEdge", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<string>("DataJson")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<string>("ReactFlowId")
                        .HasColumnType("text");

                    b.Property<string>("SourceNodeId")
                        .HasColumnType("text");

                    b.Property<string>("TargetNodeId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<Guid?>("WorkflowId")
                        .HasColumnType("uuid");

                    b.HasKey("ObjectId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowEdge");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowInstance", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<Guid?>("CurrentNodeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CurrentWorkflowNodeObjectId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("RelatedObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("RelatedObjectTypeName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<Guid?>("WorkflowId")
                        .HasColumnType("uuid");

                    b.HasKey("ObjectId");

                    b.HasIndex("CurrentWorkflowNodeObjectId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowInstance");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowNode", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<string>("DataJson")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<double?>("PositionX")
                        .HasColumnType("double precision");

                    b.Property<double?>("PositionY")
                        .HasColumnType("double precision");

                    b.Property<string>("ReactFlowId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<Guid?>("WorkflowId")
                        .HasColumnType("uuid");

                    b.HasKey("ObjectId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowNode");
                });

            modelBuilder.Entity("AppLogicLayer.ApprovalProcess", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AppLogicLayer.AuditTrailField", b =>
                {
                    b.HasOne("AppLogicLayer.AuditTrail", "AuditTrail")
                        .WithMany("AuditTrailFields")
                        .HasForeignKey("AuditTrailId");

                    b.Navigation("AuditTrail");
                });

            modelBuilder.Entity("AppLogicLayer.Func", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AppLogicLayer.Position", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("AppLogicLayer.Role", "Role")
                        .WithMany("Positions")
                        .HasForeignKey("RoleID");

                    b.Navigation("Creator");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppLogicLayer.Role", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AppLogicLayer.RoleFunc", b =>
                {
                    b.HasOne("AppLogicLayer.Func", "Function")
                        .WithMany()
                        .HasForeignKey("FuncId");

                    b.HasOne("AppLogicLayer.Role", "Role")
                        .WithMany("RoleFunctions")
                        .HasForeignKey("RoleId");

                    b.Navigation("Function");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppLogicLayer.User", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AppLogicLayer.Workflow", b =>
                {
                    b.HasOne("AppLogicLayer.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowEdge", b =>
                {
                    b.HasOne("AppLogicLayer.Workflow", "Workflow")
                        .WithMany("WorkflowEdges")
                        .HasForeignKey("WorkflowId");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowInstance", b =>
                {
                    b.HasOne("AppLogicLayer.WorkflowNode", "CurrentWorkflowNode")
                        .WithMany()
                        .HasForeignKey("CurrentWorkflowNodeObjectId");

                    b.HasOne("AppLogicLayer.Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowId");

                    b.Navigation("CurrentWorkflowNode");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("AppLogicLayer.WorkflowNode", b =>
                {
                    b.HasOne("AppLogicLayer.Workflow", "Workflow")
                        .WithMany("WorkflowNodes")
                        .HasForeignKey("WorkflowId");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("AppLogicLayer.AuditTrail", b =>
                {
                    b.Navigation("AuditTrailFields");
                });

            modelBuilder.Entity("AppLogicLayer.Role", b =>
                {
                    b.Navigation("Positions");

                    b.Navigation("RoleFunctions");
                });

            modelBuilder.Entity("AppLogicLayer.Workflow", b =>
                {
                    b.Navigation("WorkflowEdges");

                    b.Navigation("WorkflowNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
